// Package models contains the types for schema 'public'.
package models

// GENERATED BY XO. DO NOT EDIT.

import (
	"errors"
)

// OtxWeblinkWeblinkBasket represents a row from 'public.otx_weblink_weblink_baskets'.
type OtxWeblinkWeblinkBasket struct {
	ID        int `json:"id"`         // id
	WeblinkID int `json:"weblink_id"` // weblink_id
	BasketID  int `json:"basket_id"`  // basket_id

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the OtxWeblinkWeblinkBasket exists in the database.
func (owwb *OtxWeblinkWeblinkBasket) Exists() bool {
	return owwb._exists
}

// Deleted provides information if the OtxWeblinkWeblinkBasket has been deleted from the database.
func (owwb *OtxWeblinkWeblinkBasket) Deleted() bool {
	return owwb._deleted
}

// Insert inserts the OtxWeblinkWeblinkBasket to the database.
func (owwb *OtxWeblinkWeblinkBasket) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if owwb._exists {
		return errors.New("insert failed: already exists")
	}

	// sql insert query, primary key provided by sequence
	const sqlstr = `INSERT INTO public.otx_weblink_weblink_baskets (` +
		`weblink_id, basket_id` +
		`) VALUES (` +
		`$1, $2` +
		`) RETURNING id`

	// run query
	XOLog(sqlstr, owwb.WeblinkID, owwb.BasketID)
	err = db.QueryRow(sqlstr, owwb.WeblinkID, owwb.BasketID).Scan(&owwb.ID)
	if err != nil {
		return err
	}

	// set existence
	owwb._exists = true

	return nil
}

// Update updates the OtxWeblinkWeblinkBasket in the database.
func (owwb *OtxWeblinkWeblinkBasket) Update(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !owwb._exists {
		return errors.New("update failed: does not exist")
	}

	// if deleted, bail
	if owwb._deleted {
		return errors.New("update failed: marked for deletion")
	}

	// sql query
	const sqlstr = `UPDATE public.otx_weblink_weblink_baskets SET (` +
		`weblink_id, basket_id` +
		`) = ( ` +
		`$1, $2` +
		`) WHERE id = $3`

	// run query
	XOLog(sqlstr, owwb.WeblinkID, owwb.BasketID, owwb.ID)
	_, err = db.Exec(sqlstr, owwb.WeblinkID, owwb.BasketID, owwb.ID)
	return err
}

// Save saves the OtxWeblinkWeblinkBasket to the database.
func (owwb *OtxWeblinkWeblinkBasket) Save(db XODB) error {
	if owwb.Exists() {
		return owwb.Update(db)
	}

	return owwb.Insert(db)
}

// Upsert performs an upsert for OtxWeblinkWeblinkBasket.
//
// NOTE: PostgreSQL 9.5+ only
func (owwb *OtxWeblinkWeblinkBasket) Upsert(db XODB) error {
	var err error

	// if already exist, bail
	if owwb._exists {
		return errors.New("insert failed: already exists")
	}

	// sql query
	const sqlstr = `INSERT INTO public.otx_weblink_weblink_baskets (` +
		`id, weblink_id, basket_id` +
		`) VALUES (` +
		`$1, $2, $3` +
		`) ON CONFLICT (id) DO UPDATE SET (` +
		`id, weblink_id, basket_id` +
		`) = (` +
		`EXCLUDED.id, EXCLUDED.weblink_id, EXCLUDED.basket_id` +
		`)`

	// run query
	XOLog(sqlstr, owwb.ID, owwb.WeblinkID, owwb.BasketID)
	_, err = db.Exec(sqlstr, owwb.ID, owwb.WeblinkID, owwb.BasketID)
	if err != nil {
		return err
	}

	// set existence
	owwb._exists = true

	return nil
}

// Delete deletes the OtxWeblinkWeblinkBasket from the database.
func (owwb *OtxWeblinkWeblinkBasket) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !owwb._exists {
		return nil
	}

	// if deleted, bail
	if owwb._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM public.otx_weblink_weblink_baskets WHERE id = $1`

	// run query
	XOLog(sqlstr, owwb.ID)
	_, err = db.Exec(sqlstr, owwb.ID)
	if err != nil {
		return err
	}

	// set deleted
	owwb._deleted = true

	return nil
}

// OtxWeblinkWeblink returns the OtxWeblinkWeblink associated with the OtxWeblinkWeblinkBasket's WeblinkID (weblink_id).
//
// Generated from foreign key 'otx_weblink_webli_weblink_id_27a62a91_fk_otx_weblink_weblink_id'.
func (owwb *OtxWeblinkWeblinkBasket) OtxWeblinkWeblink(db XODB) (*OtxWeblinkWeblink, error) {
	return OtxWeblinkWeblinkByID(db, owwb.WeblinkID)
}

// HitBasket returns the HitBasket associated with the OtxWeblinkWeblinkBasket's BasketID (basket_id).
//
// Generated from foreign key 'otx_weblink_weblink_baskets_basket_id_fdeaf8ef_fk_hit_basket_id'.
func (owwb *OtxWeblinkWeblinkBasket) HitBasket(db XODB) (*HitBasket, error) {
	return HitBasketByID(db, owwb.BasketID)
}

// OtxWeblinkWeblinkBasketsByBasketID retrieves a row from 'public.otx_weblink_weblink_baskets' as a OtxWeblinkWeblinkBasket.
//
// Generated from index 'otx_weblink_weblink_baskets_afdeaea9'.
func OtxWeblinkWeblinkBasketsByBasketID(db XODB, basketID int) ([]*OtxWeblinkWeblinkBasket, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, weblink_id, basket_id ` +
		`FROM public.otx_weblink_weblink_baskets ` +
		`WHERE basket_id = $1`

	// run query
	XOLog(sqlstr, basketID)
	q, err := db.Query(sqlstr, basketID)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*OtxWeblinkWeblinkBasket{}
	for q.Next() {
		owwb := OtxWeblinkWeblinkBasket{
			_exists: true,
		}

		// scan
		err = q.Scan(&owwb.ID, &owwb.WeblinkID, &owwb.BasketID)
		if err != nil {
			return nil, err
		}

		res = append(res, &owwb)
	}

	return res, nil
}

// OtxWeblinkWeblinkBasketsByWeblinkID retrieves a row from 'public.otx_weblink_weblink_baskets' as a OtxWeblinkWeblinkBasket.
//
// Generated from index 'otx_weblink_weblink_baskets_ea7aa2ec'.
func OtxWeblinkWeblinkBasketsByWeblinkID(db XODB, weblinkID int) ([]*OtxWeblinkWeblinkBasket, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, weblink_id, basket_id ` +
		`FROM public.otx_weblink_weblink_baskets ` +
		`WHERE weblink_id = $1`

	// run query
	XOLog(sqlstr, weblinkID)
	q, err := db.Query(sqlstr, weblinkID)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*OtxWeblinkWeblinkBasket{}
	for q.Next() {
		owwb := OtxWeblinkWeblinkBasket{
			_exists: true,
		}

		// scan
		err = q.Scan(&owwb.ID, &owwb.WeblinkID, &owwb.BasketID)
		if err != nil {
			return nil, err
		}

		res = append(res, &owwb)
	}

	return res, nil
}

// OtxWeblinkWeblinkBasketByID retrieves a row from 'public.otx_weblink_weblink_baskets' as a OtxWeblinkWeblinkBasket.
//
// Generated from index 'otx_weblink_weblink_baskets_pkey'.
func OtxWeblinkWeblinkBasketByID(db XODB, id int) (*OtxWeblinkWeblinkBasket, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, weblink_id, basket_id ` +
		`FROM public.otx_weblink_weblink_baskets ` +
		`WHERE id = $1`

	// run query
	XOLog(sqlstr, id)
	owwb := OtxWeblinkWeblinkBasket{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, id).Scan(&owwb.ID, &owwb.WeblinkID, &owwb.BasketID)
	if err != nil {
		return nil, err
	}

	return &owwb, nil
}

// OtxWeblinkWeblinkBasketByWeblinkIDBasketID retrieves a row from 'public.otx_weblink_weblink_baskets' as a OtxWeblinkWeblinkBasket.
//
// Generated from index 'otx_weblink_weblink_baskets_weblink_id_e752d85f_uniq'.
func OtxWeblinkWeblinkBasketByWeblinkIDBasketID(db XODB, weblinkID int, basketID int) (*OtxWeblinkWeblinkBasket, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id, weblink_id, basket_id ` +
		`FROM public.otx_weblink_weblink_baskets ` +
		`WHERE weblink_id = $1 AND basket_id = $2`

	// run query
	XOLog(sqlstr, weblinkID, basketID)
	owwb := OtxWeblinkWeblinkBasket{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, weblinkID, basketID).Scan(&owwb.ID, &owwb.WeblinkID, &owwb.BasketID)
	if err != nil {
		return nil, err
	}

	return &owwb, nil
}
