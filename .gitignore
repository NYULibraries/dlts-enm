### https://raw.githubusercontent.com/github/gitignore/master/Go.gitignore

# Binaries for programs and plugins
*.exe
*.dll
*.so
*.dylib

# Test binary, build with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Project-local glide cache, RE: https://github.com/Masterminds/glide/issues/736
.glide/

### Repo-specific

dlts-enm
enm

.idea
*~

dist/*
!dist/.commit-empty-directory

# Running `godep save` automatically checks vendor/ into source control.
# For now, don't commit it.  To generate vendor/, can do this:
#
#     GOPATH=$(pwd)/vendor godep restore; mv vendor/src/* vendor/; rmdir vendor/src/
#
# It's apparently been common practice to do it this way (source: https://github.com/tools/godep/issues/50):
#
#     GOPATH=$(godep path) godep restore
#
# `godep path` returns an error, though:
#
# $ mkdir -p vendor/{bin/pkg/src}
# $ godep path
# Error: GO15VENDOREXPERIMENT is enabled and the vendor/ directory is not a valid Go workspace.
#
# Note that using `godep restore` in this way does not create a vendor/ directory that is identical
# to what is created by `godep save`, which does not copy certain files and directories by design.
# (see documentation for `godep save` for details).
vendor/

sitegen/testdata/cache/*
!sitegen/testdata/cache/.commit-empty-directory

sitegen/testdata/tmp/*
!sitegen/testdata/tmp/.commit-empty-directory

solr/testdata/tmp/*
!solr/testdata/tmp/.commit-empty-directory

sitegenmysql/testdata/tmp/*
!sitegenmysql/testdata/tmp/.commit-empty-directory

solrmysql/testdata/tmp/*
!solrmysql/testdata/tmp/.commit-empty-directory
